{"mappings":"AAAA,sDAAsD;AACtD,wDAAwD;AACxD,sBAAsB;AACtB,aAAa;AACb,eAAe;AACf,eAAe;AACf,cAAc;AACd,YAAY;AACZ,eAAe;AACf,cAAc;AACd,eAAe;AACf,aAAa;AACb,eAAe;AACf,cAAc;AACd,eAAe;AACf,aAAa;AACb,aAAa;AACb,cAAc;AACd,eAAe;AACf,eAAe;AACf,cAAc;AACd,cAAc;AACd,YAAY;AACZ,cAAc;AACd,eAAe;AACf,cAAc;AACd,eAAe;AACf,eAAe;AACf,eAAe;AACf,gBAAgB;AAChB,gBAAgB;AAChB,gBAAgB;AAChB,gBAAgB;AAChB,gBAAgB;AAChB,gBAAgB;AAChB,gBAAgB;AAChB,gBAAgB;AAChB,gBAAgB;AAChB,gBAAgB;AAChB,KAAK;AAEL,gCAAgC;AAChC,8DAA8D;AAC9D,iFAAiF;AACjF,MAAM;AACN,IAAI;AACJ,+CAA+C;AAC/C,6CAA6C;AAC7C,MAAM;AACN,8CAA8C;AAC9C,uBAAuB;AACvB,4BAA4B;AAC5B,+CAA+C;AAC/C,gCAAgC;AAChC,4BAA4B;AAC5B,MAAM;AACN,MAAM;AACN,8CAA8C;AAC9C,iCAAiC;AACjC,wDAAwD;AACxD,wBAAwB;AACxB,yCAAyC;AACzC,oCAAoC;AACpC,MAAM;AACN,MAAM;AACN,MAAM,SAAS,SAAS,aAAa,CAAC;AACtC,MAAM,UAAU,SAAS,aAAa,CAAC;AAEvC,MAAM,YAAY;IAChB,GAAG;IAAM,GAAG;IAAQ,GAAG;IAAQ,GAAG;IAAO,GAAG;IAAK,GAAG;IAAQ,GAAG;IAC/D,GAAG;IAAQ,GAAG;IAAM,GAAG;IAAQ,GAAG;IAAO,GAAG;IAAQ,GAAG;IAAM,GAAG;IAChE,GAAG;IAAO,GAAG;IAAQ,GAAG;IAAQ,GAAG;IAAO,GAAG;IAAO,GAAG;IAAK,GAAG;IAC/D,GAAG;IAAQ,GAAG;IAAO,GAAG;IAAQ,GAAG;IAAQ,GAAG;IAAQ,GAAG;IACzD,GAAG;IAAS,GAAG;IAAS,GAAG;IAAS,GAAG;IAAS,GAAG;IAAS,GAAG;IAC/D,GAAG;IAAS,GAAG;IAAS,GAAG;AAC7B;AAEA,yCAAyC;AACzC,SAAS,YAAY,KAAK;IACxB,OAAO,MAAM,KAAK,CAAC,IAAI,GAAG,CAAC,CAAA;QACzB,MAAM,YAAY,KAAK,WAAW;QAClC,IAAI,SAAS,CAAC,UAAU,EACtB,OAAO,SAAS,CAAC,UAAU;aACtB,IAAI,SAAS,KAClB,OAAO,KAAK,aAAa;QAE3B,OAAO,IAAI,4BAA4B;IACzC,GAAG,IAAI,CAAC;AACV;AAEA,yCAAyC;AACzC,SAAS,YAAY,KAAK;IACxB,MAAM,kBAAkB,OAAO,IAAI,CAAC,WAAW,MAAM,CAAC,CAAC,KAAK;QAC1D,GAAG,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG;QACtB,OAAO;IACT,GAAG,CAAC;IAEJ,OAAO,MAAM,KAAK,CAAC,KAAK,GAAG,CAAC,CAAA;QAC1B,OAAO,eAAe,CAAC,UAAU,IAAI,IAAI,kCAAkC;IAC7E,GAAG,IAAI,CAAC;AACV;AAEA,OAAO,gBAAgB,CAAC,SAAS,CAAC;IAChC,MAAM,OAAO,EAAE,MAAM,CAAC,KAAK;IAC3B,QAAQ,KAAK,GAAG,YAAY,OAAO,6BAA6B;AAClE;AAEA,QAAQ,gBAAgB,CAAC,SAAS,CAAC;IACjC,MAAM,QAAQ,EAAE,MAAM,CAAC,KAAK;IAC5B,OAAO,KAAK,GAAG,YAAY,QAAQ,6BAA6B;AAClE","sources":["main.js"],"sourcesContent":["// const textEl = document.querySelector(\".textarea\");\n// const morseEl = document.querySelector(\".morsearea\");\n// const morseCode = {\n//   A: \".-\",\n//   B: \"-...\",\n//   C: \"-.-.\",\n//   D: \"-..\",\n//   E: \".\",\n//   F: \"..-.\",\n//   G: \"--.\",\n//   H: \"....\",\n//   I: \"..\",\n//   J: \".---\",\n//   K: \"-.-\",\n//   L: \".-..\",\n//   M: \"--\",\n//   N: \"-.\",\n//   O: \"---\",\n//   P: \".--.\",\n//   Q: \"--.-\",\n//   R: \".-.\",\n//   S: \"...\",\n//   T: \"-\",\n//   U: \"..-\",\n//   V: \"...-\",\n//   W: \".--\",\n//   X: \"-..-\",\n//   Y: \"-.--\",\n//   Z: \"--..\",\n//   0: \"-----\",\n//   1: \".----\",\n//   2: \"..---\",\n//   3: \"...--\",\n//   4: \"....-\",\n//   5: \".....\",\n//   6: \"-....\",\n//   7: \"--...\",\n//   8: \"---..\",\n//   9: \"----.\",\n// };\n\n// function textToMorse(input) {\n//   for (let i = 0; i < Object.keys(morseCode).length; i++) {\n//     if (Object.keys(morseCode)[input]) return Object.values(morseCode)[input];\n//   }\n// }\n// textEl.addEventListener(\"keypress\", (e) => {\n//   morseEl.value += morseCode[e.key] + \" \";\n// });\n// textEl.addEventListener(\"keydown\", (e) => {\n//   let input = e.key;\n//   if (morseCode[input]) {\n//     morseEl.value += morseCode[input] + \" \";\n//   } else if (input === \" \") {\n//     morseEl.value += \" \";\n//   }\n// });\n// textEl.addEventListener(\"keydown\", (e) => {\n//   if (e.key === \"Backspace\") {\n//     let morseInput = morseEl.value.trim().split(\" \");\n//     morseInput.pop();\n//     morseInput = morseInput.join(\" \");\n//     morseCode.value = morseInput;\n//   }\n// });\nconst textEl = document.querySelector(\".textarea\");\nconst morseEl = document.querySelector(\".morsearea\");\n\nconst morseCode = {\n  A: \".-\", B: \"-...\", C: \"-.-.\", D: \"-..\", E: \".\", F: \"..-.\", G: \"--.\",\n  H: \"....\", I: \"..\", J: \".---\", K: \"-.-\", L: \".-..\", M: \"--\", N: \"-.\",\n  O: \"---\", P: \".--.\", Q: \"--.-\", R: \".-.\", S: \"...\", T: \"-\", U: \"..-\",\n  V: \"...-\", W: \".--\", X: \"-..-\", Y: \"-.--\", Z: \"--..\", 0: \"-----\", \n  1: \".----\", 2: \"..---\", 3: \"...--\", 4: \"....-\", 5: \".....\", 6: \"-....\",\n  7: \"--...\", 8: \"---..\", 9: \"----.\"\n};\n\n// Function to convert text to Morse code\nfunction textToMorse(input) {\n  return input.split(\"\").map(char => {\n    const upperChar = char.toUpperCase();\n    if (morseCode[upperChar]) {\n      return morseCode[upperChar];\n    } else if (char === \" \") {\n      return \" \"; // for spaces\n    }\n    return ''; // ignore invalid characters\n  }).join(\" \");\n}\n\n// Function to convert Morse code to text\nfunction morseToText(input) {\n  const morseToTextCode = Object.keys(morseCode).reduce((acc, key) => {\n    acc[morseCode[key]] = key;\n    return acc;\n  }, {});\n  \n  return input.split(\" \").map(morseChar => {\n    return morseToTextCode[morseChar] || ''; // return the corresponding letter\n  }).join(\"\");\n}\n\ntextEl.addEventListener(\"input\", (e) => {\n  const text = e.target.value;\n  morseEl.value = textToMorse(text); // Convert text to morse code\n});\n\nmorseEl.addEventListener(\"input\", (e) => {\n  const morse = e.target.value;\n  textEl.value = morseToText(morse); // Convert morse code to text\n});\n"],"names":[],"version":3,"file":"index.c4775257.js.map","sourceRoot":"/__parcel_source_root/"}